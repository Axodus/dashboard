name: Dashboard Conda

on: 
  push:
    branches:
      - develop

jobs:
  check-conda:
    runs-on: self-hosted
    outputs:
      conda_found: ${{ steps.check_conda.outputs.conda_found }}
    steps:
      - uses: actions/checkout@v4
      - name: Check if Conda is installed
        id: check_conda
        run: |
          CONDA_PATHS=(
            "/opt/conda/bin/conda"
            "~/anaconda3/bin/conda"
            "/usr/local/anaconda3/bin/conda"
            "~/miniconda3/bin/conda"
            "/root/miniconda/bin/conda"
            "~/Anaconda3/Scripts/conda"
            "$CONDA/bin/conda"
          )

          CONDA_EXE=""
          for path in "${CONDA_PATHS[@]}"; do
            if [ -x "$(eval echo $path)" ]; then
              CONDA_EXE=$(eval echo $path)
              break
            fi
          done

          if [ -z "$CONDA_EXE" ]; then
            echo "conda_found=false" >> $GITHUB_OUTPUT
            echo "Please install Anaconda or Miniconda with Python 3.10+ first."
            echo "See: https://www.anaconda.com/distribution/"
            exit 1
          else
            echo "conda_found=true" >> $GITHUB_OUTPUT
            echo "Conda found at: $(dirname $CONDA_EXE)"
          fi
        shell: bash

  install:
    runs-on: self-hosted
    needs: check-conda
    if: needs.check-conda.outputs.conda_found == 'false'
    steps:
      - uses: actions/checkout@v4
      - name: Install Environment
        run: |
          if conda env list | grep -q '^dashboard '; then
            echo "Environment already exists."
          else
            conda env create -f environment_conda.yml
          fi
      - name: List Conda Environments
        run: conda env list

  conda-env:
    runs-on: self-hosted
    needs: check-conda
    if: needs.check-conda.outputs.conda_found == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Check and Initialize Conda
        run: |
          if ! command -v conda &> /dev/null; then
            echo "Conda is not installed. Please install Miniconda or Anaconda."
            exit 1
          fi
      
          if ! grep -q "conda.sh" ~/.bashrc; then
            echo "Conda not initialized. Initializing now..."
            conda init bash
            echo "Conda initialization added to .bashrc. Please run 'source ~/.bashrc' for changes to take effect."
          else
            echo "Conda is already initialized."
          fi
      
      - name: Restart bash
        run: source ~/.bashrc
      
      - name: Activate Conda environment
        run: |
          conda init bash
          source ~/.bashrc
          source /home/mzfshark/miniconda3/etc/profile.d/conda.sh
          conda activate dashboard

  dependences:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Install pip dependences
        run: |
          pip install -r requirements.txt

  run-dashboard:
    needs: [conda-env, dependences]
    runs-on: self-hosted
    environment: Development
    steps:
      - uses: actions/checkout@v4
  
      - name: Verify and Initialize Conda
        run: |
          if ! conda info; then
            # If Conda is not initialized, initialize it
            conda init bash
            source ~/.bashrc
          fi
  
      - name: Activate Environment
        run: |
          # Check if the environment is active, if not activate it
          if ! conda env list | grep -q "dashboard"; then
            conda activate dashboard
          else
            echo "Dashboard environment already activated."
          fi
  
      - name: Verify Environment Before Running
        run: conda env list
  
      - name: Run Streamlit Dashboard
        run: |
          streamlit run main.py --server.headless true
